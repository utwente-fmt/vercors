// -*- tab-width:2 ; indent-tabs-mode:nil -*-

class simplify_expr {
  int x;
  
  axiom aunitr { x+0 == x }
  axiom aunitl { 0+x == x }
  
  axiom munitr { x*1 == x }
  axiom munitl { 1*x == x }

  int i;
  boolean b1,b2;
  int e1;

  axiom single_b { (\forall int i; b1 ; (i == (e1!i)) ==> b2 )
               ==
                 (\let int i=e1 ; b1 ==> b2 ) }

  resource r1;
  axiom single_r { (\forall* int i; b1 ; (i == (e1!i)) ==> r1 )
               ==
                 (\let int i=e1 ; b1 ==> r1 ) }

}

