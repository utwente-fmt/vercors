adt StringBijection {
    pure String toString(string data);
    pure string fromString(String object);

    axiom (\forall string data; {: toString(data) :} != null);
    axiom (\forall String o; o != null; toString({: fromString(o) :}) == o);
    axiom (\forall string data; fromString({: toString(data) :}) == data);
}

ensures \result != null;
ensures \result.data() == s;
String `constructor`(string s);

// Order in the below class matters, as it is parsed into an instance of StringClass
class String  {
    // First: interner
    decreases;
    ensures \result == StringBijection.toString(this.data());
    pure String intern();

    // Second: concat
    decreases;
    ensures \result != null;
    ensures \result.data() == this.data() + b.data();
    pure String concatStrings(String b);

    decreases;
    pure string data();
}