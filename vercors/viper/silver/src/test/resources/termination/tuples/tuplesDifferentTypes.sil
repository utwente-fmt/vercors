//:: IgnoreFile(/silicon/issue/297/)

import "../decreaseOrder/int_decreases.sil"
import "../decreaseOrder/set_decreases.sil"
import "../decreaseOrder/perm_decreases.sil"
import "../decreaseOrder/ref_decreases.sil"
import "../decreaseOrder/bool_decreases.sil"
import "../decreaseOrder/multiSet_decreases.sil"
import "../decreaseOrder/seq_decreases.sil"
import "../decreaseOrder/pred_decreases.sil"

function f(i:Int, s: Set[Int], p:Perm, r:Ref): Bool
requires i>=0
requires p>=none
decreases p,i,r,s
{
    r == null ? true : g(s,null,p)
}

function g(s: Set[Int], r:Ref, p:Perm): Bool
requires p>=none
decreases r,p,s
{
    p > write ? f(|s|,s,p-write,r) : false
}

function h(b:Bool, m: Multiset[Int], s: Seq[Ref]): Int
requires pred(b)
decreases m,s,pred(b),b
{
    unfolding pred(b) in b ? h(!b, m, s) : 1
}

predicate pred(b:Bool)
{
    b ==> pred(!b)
}