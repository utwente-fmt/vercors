import "../decreaseOrder/int_decreases.sil"

//Function with recursion but no decreasing Clause

//:: ExpectedOutput(termination.failed:no.decClause.specified)
function f1(x:Int): Int
{
    f1(x)
}

//Function with indirect-recursion but no decreasing Clause
//:: ExpectedOutput(termination.failed:no.decClause.specified)
function f2(x:Int): Int
{
    f3(x)
}

//:: ExpectedOutput(termination.failed:no.decClause.specified)
function f3(x:Int): Int
{
    f2(x)
}

//:: ExpectedOutput(termination.failed:no.decClause.specified)
function f4(x:Int): Int
{
    f5(f5(f4(f5(x))))
}

function f5(x:Int): Int
{
    6
}


