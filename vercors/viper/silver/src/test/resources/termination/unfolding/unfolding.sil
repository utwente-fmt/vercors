//UnexpectedOutput(z3.interaction.failed)(silicon)

import "../decreaseOrder/int_decreases.sil"
import "../decreaseOrder/pred_decreases.sil"

field next : Ref
field f : Int

function fun1(r:Ref): Int
requires List(r)
decreases unfolding List(r) in r.f
{
    unfolding List(r) in r.next == null ? 0 : fun1(r.next)
}

predicate List(r:Ref) {
    acc(r.f) && acc(r.next) && (r.next != null ==> List(r.next)) && (r.next != null ==> unfolding List(r.next) in r.f > r.next.f) && r.f > 0
}

function fun2(r:Ref): Int
requires List(r)
decreases List(r)
{
    unfolding List(r) in r.next == null ? 0 : fun2(r.next)
}