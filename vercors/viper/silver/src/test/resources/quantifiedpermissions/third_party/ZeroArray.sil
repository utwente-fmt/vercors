/* Provided by Stefan Blom of U Twente. */

field Integer_value: Int

method zero_array(this: Ref, ar: Seq[Ref])
  requires |ar|>10
  requires (forall k: Int :: (k in [0..|ar|)) ==> acc(ar[k].Integer_value, write))
  ensures (forall k: Int :: (k in [0..|ar|)) ==> acc(ar[k].Integer_value, write))
  ensures (forall k: Int :: (0 <= k) && (k < |ar|) ==> (ar[k].Integer_value == 0))
{
  var i: Int
  i := 1
  ar[0].Integer_value := 0
  while (i < |ar|)
    invariant (0 <= i) && (i <= |ar|)
    invariant (forall k: Int :: (k in [0..|ar|)) ==> acc(ar[k].Integer_value, write))
    invariant (forall k: Int :: (0 <= k) && (k < i) ==> (ar[k].Integer_value == 0))
  {
    ar[i].Integer_value := 0
    i := i + 1
  }
}
