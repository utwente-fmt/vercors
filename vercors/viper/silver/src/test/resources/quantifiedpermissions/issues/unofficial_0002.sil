/* Originally reported by Arshavir (and minimised by Peter) on 2015-10-12.
 * The problem was another instance of a prover variable that escaped its scope.
 */

field left: Ref
field is_marked: Bool

define INV(graph)
	!(null in graph)
	&& (forall a: Ref :: a in graph ==> acc(a.left))
	&& (forall c: Ref :: c in graph ==> acc(c.is_marked))
	&& (forall x: Ref :: x in graph ==> (x.left  != null ==> x.left  in graph))


method trav(graph: Set[Ref], node: Ref)
	requires node in graph && INV(graph)
	requires !node.is_marked
	ensures acc(node.is_marked)
	ensures node.is_marked
{
	node.is_marked := true
	if (node.left != null && !node.left.is_marked) {
		trav(graph, node.left)
	}
	//:: ExpectedOutput(assert.failed:insufficient.permission)
  assert node.is_marked; /* Previously succeeded */
}

