field left: Ref
field all: Set[Ref]

predicate inv(this: Ref) {
     acc(this.all)
  && (forall q: Ref :: q in (this.all) ==> acc(q.left, 1/2))
  && (forall s: Ref :: (s in (this.all) && s.left == null) ==> acc(s.left, 1/2))
}

method goo() {
  var x: Ref
  var t: Ref

  inhale acc(inv(t))
  unfold acc(inv(t))
  inhale x in t.all && x.left == null
  exhale acc(x.left)
}
