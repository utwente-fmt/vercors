field f: Int

function idx(a: Int, b: Int, c: Ref, n: Int): Int
  ensures 0 <= result && result < n

method test01(xs: Seq[Ref], n: Int) {
  inhale 10 < n
  inhale n <= |xs|
  inhale forall i: Int :: 0 <= i && i < n ==> acc(xs[i].f)

  inhale forall i: Int, j: Int ::
           0 <= i && i < n
        && 0 <= j && j < i
    ==> xs[idx(i, j, xs[j+1], n)].f == i + j

  //:: UnexpectedOutput(assert.failed:assertion.false, /silicon/issue/280/)
  assert xs[idx(5, 2, xs[3], n)].f == 7
}
