field f: Int

predicate P(x: Ref) {
  acc(x.f) && x.f > 0
}

method test01(x: Ref) {
  exhale forall y: Ref :: false ==> acc(y.f)

  inhale acc(x.f)
  assert perm(x.f) == write
  exhale acc(x.f) && perm(x.f) == none
}

method test02(x: Ref) {
  exhale forall y: Ref :: false ==> P(y)

  inhale P(x)
  unfold P(x)

  assert perm(x.f) == write
  assert perm(P(x)) == none

  fold P(x)

  assert perm(x.f) == none
  assert perm(P(x)) == write
}

