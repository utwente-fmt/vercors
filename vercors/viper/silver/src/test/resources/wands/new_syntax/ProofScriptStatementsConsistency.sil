//:: IgnoreFile(/carbon/issue/216/)
field f: Int

method test0(x: Ref) {
    package acc(x.f) --* acc(x.f) && x.f == 0 {
        //:: ExpectedOutput(consistency.error)
        x.f := 0
    }
}

method test1(x: Ref) {
    package acc(x.f) --* acc(x.f) && x.f == 0 {
        if (x.f != 0) {
            //:: ExpectedOutput(consistency.error)
            x.f := 0
        }
    }
}

method test2() {
    package true --* true {
        var i: Int := 0
        //:: ExpectedOutput(consistency.error)
        while (i < 5) {
            i := i+1
        }
    }
}

method test3() {
    package true --* true {
        var x: Ref
        //:: ExpectedOutput(consistency.error)
        x := new(f)
    }
}
