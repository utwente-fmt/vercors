//:: IgnoreFile(/carbon/issue/216/)
field f: Int

predicate Cell(x: Ref) {
    acc(x.f)
}

method callee(x: Ref)
requires Cell(x)
ensures acc(x.f) && x.f == 0 {
    unfold Cell(x)
    x.f := 0
}

method test0(x: Ref)
requires Cell(x)
ensures Cell(x) {
    package Cell(x) --* acc(x.f) {
        callee(x)
    }
}

method test1(x: Ref)
requires Cell(x)
//:: ExpectedOutput(postcondition.violated:insufficient.permission)
ensures Cell(x) {
    package true --* acc(x.f) {
        callee(x)
    }
}
