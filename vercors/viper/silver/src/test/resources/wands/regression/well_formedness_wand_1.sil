//:: IgnoreFile(/carbon/issue/216/)
field f: Ref

method test01(x: Ref) {
  //:: ExpectedOutput(wand.not.wellformed:insufficient.permission)
  //:: MissingOutput(wand.not.wellformed:insufficient.permission, /silicon/issue/201/)
  //:: MissingOutput(wand.not.wellformed:insufficient.permission, /carbon/issue/105/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /silicon/issue/201/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /carbon/issue/105/)
  package true --* acc(x.f.f)
    /* - x might be null
     * - no permissions to read x.f
     * - x.f might be null
     */
}

method test02a(x: Ref)
  requires acc(x.f)
  requires acc(x.f.f)
{
  //:: ExpectedOutput(wand.not.wellformed:insufficient.permission)
  //:: ExpectedOutput(wand.not.wellformed:receiver.null)
  //:: MissingOutput(wand.not.wellformed:receiver.null, /silicon/issue/201/)
  //:: MissingOutput(wand.not.wellformed:insufficient.permission, /silicon/issue/201/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /carbon/issue/105/)
  //:: MissingOutput(wand.not.wellformed:receiver.null, /carbon/issue/105/)
  //:: MissingOutput(wand.not.wellformed:insufficient.permission, /carbon/issue/105/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /silicon/issue/201/)
  package true --* acc(x.f.f)
    /* + x is known to be non-null
     * - no permissions to read x.f
     * - x.f might be null
     */
}

method test02b(x: Ref) {
  inhale acc(x.f)
  inhale acc(x.f.f)

  //:: ExpectedOutput(wand.not.wellformed:receiver.null)
  //:: ExpectedOutput(wand.not.wellformed:insufficient.permission)
  //:: MissingOutput(wand.not.wellformed:receiver.null, /silicon/issue/201/)
  //:: MissingOutput(wand.not.wellformed:insufficient.permission, /silicon/issue/201/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /carbon/issue/105/)
  //:: MissingOutput(wand.not.wellformed:receiver.null, /carbon/issue/105/)
  //:: MissingOutput(wand.not.wellformed:insufficient.permission, /carbon/issue/105/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /silicon/issue/201/)
  package true --* acc(x.f.f)
    /* same situation as in test02a */
}

method test03(x: Ref) {
  inhale acc(x.f)
  inhale acc(x.f.f)
  package true --* acc(x.f) && acc(x.f.f)
}
