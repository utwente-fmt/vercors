//:: IgnoreFile(/carbon/issue/216/)
/* Consistency checks made by the resolver in order to catch malformed ASTs
 * that cannot be generated programmatically, but that can be generated by
 * the parser. That is, the resolver detects malformed parser ASTs.
 */

field f: Int
field g: Int

predicate Pair(this: Ref) {
  acc(this.f) && acc(this.g)
}

method test06(p: Ref) {
  //:: ExpectedOutput(typechecker.error)
  apply unfolding Pair(p) in true --* true
    /* Apply accepts magics wands only */
}

//method test09(p: Ref) {
//  //:: ExpectedOutput(typechecker.error)
//  assert applying (folding Pair(p) in true --* true) in true
//    /* Applying accepts magics wands only */
//}

method test07(p: Ref) {
  //:: ExpectedOutput(typechecker.error)
  package unfolding Pair(p) in true --* true
    /* Package accepts magics wands only */
}

//method test08(p: Ref)
//  requires acc(Pair(p))
//{
//  //:: ExpectedOutput(typechecker.error)
//  assert packaging (unfolding Pair(p) in true --* true) in true
//    /* Packaging accepts magics wands only */
//}
