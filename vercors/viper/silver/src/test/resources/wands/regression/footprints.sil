//:: IgnoreFile(/carbon/issue/216/)
field v: Bool
field l: Ref

method test1(x: Ref)
  requires acc(x.l) && acc(x.l.v)
{
  assert x.l != null

  //:: ExpectedOutput(package.failed:insufficient.permission)
  package acc(x.l) --* acc(x.l) && acc(x.l.v)
    /* The x.l from the LHS might no longer have the same value */
}

method test2(x: Ref)
  requires acc(x.l) && acc(x.l.v) && x.l.v
{
  assert x.l != null

  //:: ExpectedOutput(package.failed:insufficient.permission)
  package acc(x.l) && x.l != null --* acc(x.l) && acc(x.l.v)
    /* The x.l from the LHS might point to a different object, so even though
     * acc(x.l.v) (for the *current* object x.l points to) goes into the
     * footprint, the RHS cannot guarantee acc(x.l.v).
     */
}

method test3(x: Ref)
  requires acc(x.v)
{
  x.v := true
  //:: ExpectedOutput(wand.not.wellformed)
  //:: MissingOutput(wand.not.wellformed, /carbon/issue/105/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /carbon/issue/105/)
  //:: MissingOutput(wand.not.wellformed, /silicon/issue/201/)
  //:: UnexpectedOutput(package.failed:insufficient.permission, /silicon/issue/201/)
  package true --* x.v

  /* If the preceding package had succeeded, it would allow the following to succeed as well */
  x.v := false
  apply true --* x.v
  assert false
}
