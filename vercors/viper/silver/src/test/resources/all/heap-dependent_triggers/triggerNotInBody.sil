field f: Int

method m(xs: Seq[Ref], ys: Seq[Ref], z: Ref) {
    inhale forall x: Ref :: x in xs ==> acc(x.f)
    assume |ys| >= 1
    inhale acc(ys[0].f)
    assume forall x: Ref :: {ys[x.f].f} x in xs ==> x != z

    var y: Ref
    assume y in xs
    assume y.f == 0
    assume ys[y.f].f != 0
    assert y != z
}