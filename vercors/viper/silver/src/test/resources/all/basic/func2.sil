field f: Int

function f1(r: Ref): Int
  requires acc(r.f, wildcard)
{ r.f }

function f3_a(r: Ref): Int
  //:: ExpectedOutput(not.wellformed:insufficient.permission)
  requires ((r.f) == 2)
{ 2 }

function f3_b(r: Ref): Int
  requires r != null
  //:: ExpectedOutput(not.wellformed:insufficient.permission)
  requires ((r.f) == 2)
{ 2 }

function f4(r: Ref): Int
  requires acc(r.f, write)
  requires (r.f) == 2
{ 2 }

//:: ExpectedOutput(function.not.wellformed:insufficient.permission)
function f5(r: Ref): Int
  requires r != null
{ r.f }

function f6(r: Ref): Int
  requires r != null
{
  //:: ExpectedOutput(application.precondition:insufficient.permission)
  f4(r)
}

method t1(r: Ref)
  requires acc(r.f, write)
{
  r.f := 1
  assert f1(r) == 1;

  //:: ExpectedOutput(application.precondition:assertion.false)
  //:: UnexpectedOutput(assert.failed:assertion.false, /Carbon/issue/173/)
  assert f4(r) > 0;
}
