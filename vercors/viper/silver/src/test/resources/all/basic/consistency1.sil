field f: Int
field next: Ref

predicate deeper(r:Ref) {
     acc(r.f)
  && acc(r.next)
    //:: ExpectedOutput(consistency.error)
  && ((r.next != null) ==> acc(deeper(r.next)) && (unfolding deeper(r.next) in (acc(r.next.f) && acc(r.next.next))))
}

/* This was originally a mistake: it is a version of the "deeper" predicate which
 * contains itself. A verifier may be able to find out that an instance of this
 * predicate cannot be held ...
 */
predicate strange(r:Ref) {
     acc(r.f)
  && acc(r.next)
  //:: ExpectedOutput(consistency.error)
  && ((r.next != null) ==> acc(strange(r)) && (unfolding deeper(r) in (acc(r.next.f) && acc(r.next.next))))
}
