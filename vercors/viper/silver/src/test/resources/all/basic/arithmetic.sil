
method t1() returns ()
{
    assert (1 == (1 * 1))
    assert (2 == (1 + 1))
    assert (1 == (3 % 2))
    assert (-1 == (0 - 1))
    assert (+1 == 1)
    assert (0 == (1 \ 2))
}

method t2() {
    var i: Int
    i := 1 \ 2
    //:: ExpectedOutput(assignment.failed:division.by.zero)
    i := 1 \ 0
}

method t3() {
    var i: Int
    i := 1 % 2
    //:: ExpectedOutput(assignment.failed:division.by.zero)
    i := 1 % 0
}

method t4() {
    var i: Perm
    i := 1 / 2
    //:: ExpectedOutput(assignment.failed:division.by.zero)
    i := 1 / 0
}

method t5() {
    assert 2/3 == 0 // 2/3 is interpreted as integer division
    //:: ExpectedOutput(assert.failed:assertion.false)
    assert 2/3 == none
}

method t6() {
    assert 2/3 == 3/4 + 0 // / is interpreted as integer division
    assert 2\3 == 3/4 // / is interpreted as integer division
    //:: ExpectedOutput(assert.failed:assertion.false)
    assert 2/3 == 3/4 // / is interpreted as Perm-typed division
}
