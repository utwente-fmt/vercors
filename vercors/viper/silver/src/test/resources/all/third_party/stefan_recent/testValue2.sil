field Test__next: Ref

method Test__main2(diz: Ref, current_thread_id: Int, t1: Ref, t2: Ref)
  requires diz != null
  requires current_thread_id >= 0
  requires acc(t1.Test__next, wildcard)
  requires acc(t2.Test__next, wildcard)
  requires t1.Test__next != null
  requires t2.Test__next != null
  requires acc(t1.Test__next.Test__next, wildcard)
  requires acc(t2.Test__next.Test__next, wildcard)
{
  if (t1 == t2) {
    //:: ExpectedOutput(assert.failed:assertion.false)
    // confirmed by Stefan Blom
    assert false
  }
}

method Test__Test(current_thread_id: Int) returns (sys__result: Ref)
  requires current_thread_id >= 0
  ensures sys__result != null
  ensures acc(sys__result.Test__next, write) && (sys__result.Test__next == null)
{
  var diz: Ref
  diz := new(Test__next)
  diz.Test__next := null
  sys__result := diz
  assert (sys__result != null) && (acc(sys__result.Test__next, write) && (sys__result.Test__next == null))
  inhale false
}