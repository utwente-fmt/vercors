/* Provided by Stefan Blom of U Twente. */

field ar: Seq[Ref]

field Integer_value: Int

method main_main(this: Ref, tcount: Int, tid: Int)
  requires 0 <= tid
  requires tid < tcount
  requires acc(this.ar, wildcard)
  requires |this.ar| == tcount
  requires acc(this.ar[tid].Integer_value, write)
  ensures 0 <= tid
  ensures tid < tcount
  ensures acc(this.ar, wildcard)
  ensures |this.ar| == tcount
  ensures this.ar == old(this.ar)
  ensures acc(this.ar[tid].Integer_value, 1 / 2)
  ensures this.ar[tid].Integer_value == tid + 1
{
  this.ar[tid].Integer_value := tid + 1
  
  exhale acc(this.ar[tid].Integer_value, 1/2)
  inhale acc(this.ar[tid].Integer_value, 1 / 4)

  // assert acc(this.ar[tid].Integer_value, 3/4);
     /* Was necessary to trigger a heap compression.
      * See Silicon issue 119
      */

  exhale acc(this.ar[tid].Integer_value, 1/2)
  inhale acc(this.ar[tid].Integer_value, 1 / 4)

}

