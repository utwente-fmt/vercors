field f: Int

method m(xs1: Set[Ref], xs2: Set[Ref], xs3: Set[Ref], xs4: Set[Ref], xs5: Set[Ref], xs6: Set[Ref],
        xs7: Set[Ref], xs8: Set[Ref], xs9: Set[Ref], xs10: Set[Ref], xs11: Set[Ref],
        x: Ref, p: Perm) {

  inhale acc(x.f, p)

  assume (forall x1: Ref :: {x1.f} x1 in xs1 ==> acc(x1.f, p))
      && (forall x2: Ref :: {x2.f} x2 in xs2 ==> acc(x2.f, p))
      && (forall x3: Ref :: {x3.f} x3 in xs3 ==> acc(x3.f, p))
      && (forall x4: Ref :: {x4.f} x4 in xs4 ==> acc(x4.f, p))
      && (forall x5: Ref :: {x5.f} x5 in xs5 ==> acc(x5.f, p))
      && (forall x6: Ref :: {x6.f} x6 in xs6 ==> acc(x6.f, p))
      && (forall x7: Ref :: {x7.f} x7 in xs7 ==> acc(x7.f, p))
      && (forall x8: Ref :: {x8.f} x8 in xs8 ==> acc(x8.f, p))
      && (forall x9: Ref :: {x9.f} x9 in xs9 ==> acc(x9.f, p))
      && (forall x10: Ref :: {x10.f} x10 in xs10 ==> acc(x10.f, p))
      && (forall x11: Ref :: {x11.f} x11 in xs11 ==> acc(x11.f, p))

   assume x in xs1 && x in xs2
   assert acc(x.f, p)

   //:: IgnoreFile(/carbon/issue/258/)
   assert p > none ==> false
   assert |xs1| > 0 && x in xs1 ==> p < write
}
