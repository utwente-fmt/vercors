field f: Int

method test01(a: Ref, x: Ref, y: Ref, p: Perm, q: Perm)
  requires none <= q && none <= p;
  requires acc(a.f, 1/2)
{
  assume acc(x.f, p) && acc(y.f, q)

  assert none <= p && p <= 1/2
  assert none <= q && q <= 1/2
  assert x == y ==> none <= q && q <= 1/2-p

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert x == y ==> none <= q && q <= p
}

method test02(a: Ref, x: Ref, y: Ref, b1: Bool, b2: Bool)
  requires acc(a.f)
{
  assume (b1 ==> acc(x.f)) && (b2 ==> acc(y.f))

  assert b1 ==> x == a
  assert b2 ==> y == a
  assert b1 && b2 ==> false
}

method test03(a: Ref, x: Ref, y: Ref, b1: Bool, b2: Bool)
  requires acc(a.f)
{
  assume (b1 ==> acc(x.f)) && (b2 ==> acc(y.f))

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert b2 ==> false
}
