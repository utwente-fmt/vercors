field f: Int

method test(x: Ref)
  requires acc(x.f) && x.f != 3
{
  var b: Bool
  b := true
  while (b)
    //:: ExpectedOutput(not.wellformed:insufficient.permission)
    //:: MissingOutput(not.wellformed:insufficient.permission, /Carbon/issue/70/)
    invariant x != null && x.f != 3 // This is not self-framing.
  {
    //:: UnexpectedOutput(assignment.failed:insufficient.permission, /Carbon/issue/70/)
    x.f := 4  // Loop body should be verified under assumption that invariant
              // is wellformed.
    b := false
  }
}

method test2(x: Ref)
  requires acc(x.f)
{
  while (x.f < 3)
    invariant acc(x.f)
  {
  }
}

method test3(x: Ref)
  requires acc(x.f)
{
  //:: ExpectedOutput(while.failed:insufficient.permission)
  while (x.f < 3)
  {
  }
}

method test4(x: Ref)
  requires x != null
{
  while (x.f < 3)
    //:: ExpectedOutput(invariant.not.established:insufficient.permission)
    invariant acc(x.f)
  {
  }
}

method test5(x: Ref)
  requires acc(x.f)
{
  while (x.f < 3)
    //:: ExpectedOutput(invariant.not.preserved:insufficient.permission)
    invariant acc(x.f)
  {
    exhale acc(x.f)
  }
}
