predicate P1(this: Ref) {
  true
}

predicate P2(this: Ref) {
  true
}

predicate P3(this: Ref) {
  true
}

method noPredicates()
{
  var r1: Ref
  var r2: Ref
  assert forperm r: Ref [P1(r)] :: false
  assert forperm r: Ref [P2(r)] :: false
}

method noPredicates2()
{
  var r1: Ref
  var r2: Ref
  inhale acc(P3(r1))
  assert forperm r: Ref [P1(r)] :: false
  assert forperm r: Ref [P2(r)] :: false
}

method permOnlyOnePredicate1()
{
  var r1: Ref
  var r2: Ref
  inhale acc(P1(r1))
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert forperm r: Ref [P1(r)] :: false
}

method permOnlyOnePredicate2()
{
  var r1: Ref
  var r2: Ref
  inhale acc(P1(r1))
  assert forperm r: Ref [P2(r)] :: false
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert forperm r: Ref [P1(r)] :: false
}

method permCheck()
{
  var r1: Ref
  var r2: Ref
  inhale acc(P1(r1))
  exhale acc(P1(r1))
  assert forperm r: Ref [P1(r)] :: false
  assert forperm r: Ref [P2(r)] :: false
}
