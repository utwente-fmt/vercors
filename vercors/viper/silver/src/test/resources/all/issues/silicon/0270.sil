field f: Int

predicate P(x: Ref) { acc(x.f) }

method test(xs: Set[Ref], x: Ref) {
  inhale x in xs
  inhale forall y: Ref :: y in xs ==> acc(y.f)

  x.f := 10
  fold P(x)
  unfold P(x)

  exhale x.f == 10
  exhale forall y: Ref :: y in xs ==> acc(y.f)
}
