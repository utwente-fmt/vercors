field l: Ref
field r: Ref
function p(): Bool

predicate I(t: Ref) {
  t != null ==>
    acc(t.r) && acc(t.l) &&
    (p() ? I(t.r) && I(t.l) : I(t.r) && I(t.l))
}

function I2(t: Ref): Bool
  requires I(t)
{
  unfolding I(t) in t != null ==>
    let up == (p() ? t.l : t.r) in
    let dn == (p() ? t.r : t.l) in
    I2(dn) && I2(up)
}

method fail()
  //:: ExpectedOutput(postcondition.violated:assertion.false)
  ensures false
{}
