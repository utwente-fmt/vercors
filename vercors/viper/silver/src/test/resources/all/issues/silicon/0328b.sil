domain Vector9D {

  function Vector9D_ctor(f1: Int, f2: Int, f3: Int, f4: Int, f5: Int, f6: Int, f7: Int, f8: Int, f9: Int): Vector9D
  function Vector9D_ctor_syn(f1: Int, f2: Int, f3: Int, f4: Int, f5: Int, f6: Int, f7: Int, f8: Int, f9: Int): Vector9D

  function Vector9D_f1(v: Vector9D): Int

  function Vector9D_f2(v: Vector9D): Int

  function Vector9D_f3(v: Vector9D): Int

  function Vector9D_f4(v: Vector9D): Int

  function Vector9D_f5(v: Vector9D): Int

  function Vector9D_f6(v: Vector9D): Int

  function Vector9D_f7(v: Vector9D): Int

  function Vector9D_f8(v: Vector9D): Int

  function Vector9D_f9(v: Vector9D): Int

  axiom ax_synonim {
      forall f1: Int, f2: Int, f3: Int, f4: Int, f5: Int, f6: Int, f7: Int, f8: Int, f9: Int ::
        { Vector9D_ctor(f1, f2, f3, f4, f5, f6, f7, f8, f9) }
          Vector9D_ctor(f1, f2, f3, f4, f5, f6, f7, f8, f9) == Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)
  }

  axiom ax_values_of_fields {
      forall f1: Int, f2: Int, f3: Int, f4: Int, f5: Int, f6: Int, f7: Int, f8: Int, f9: Int ::
        { Vector9D_ctor(f1, f2, f3, f4, f5, f6, f7, f8, f9) }
               (Vector9D_f1(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f1)
            && (Vector9D_f2(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f2)
            && (Vector9D_f3(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f3)
            && (Vector9D_f4(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f4)
            && (Vector9D_f5(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f5)
            && (Vector9D_f6(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f6)
            && (Vector9D_f7(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f7)
            && (Vector9D_f8(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f8)
            && (Vector9D_f9(Vector9D_ctor_syn(f1, f2, f3, f4, f5, f6, f7, f8, f9)) == f9)
  }
}

method main()
{
  var v1: Vector9D
  v1 := Vector9D_ctor(1, 2, 3, 4, 5, 6, 7, 8, 9)

  v1 := Vector9D_ctor(Vector9D_f1(v1), Vector9D_f2(v1), Vector9D_f3(v1), Vector9D_f4(v1), Vector9D_f5(v1), Vector9D_f6(v1), Vector9D_f7(v1), Vector9D_f8(v1), Vector9D_f9(v1))
  v1 := Vector9D_ctor(Vector9D_f1(v1), Vector9D_f2(v1), Vector9D_f3(v1), Vector9D_f4(v1), Vector9D_f5(v1), Vector9D_f6(v1), Vector9D_f7(v1), Vector9D_f8(v1), Vector9D_f9(v1))
  v1 := Vector9D_ctor(Vector9D_f1(v1), Vector9D_f2(v1), Vector9D_f3(v1), Vector9D_f4(v1), Vector9D_f5(v1), Vector9D_f6(v1), Vector9D_f7(v1), Vector9D_f8(v1), Vector9D_f9(v1))
  v1 := Vector9D_ctor(Vector9D_f1(v1), Vector9D_f2(v1), Vector9D_f3(v1), Vector9D_f4(v1), Vector9D_f5(v1), Vector9D_f6(v1), Vector9D_f7(v1), Vector9D_f8(v1), Vector9D_f9(v1))
  v1 := Vector9D_ctor(Vector9D_f1(v1), Vector9D_f2(v1), Vector9D_f3(v1), Vector9D_f4(v1), Vector9D_f5(v1), Vector9D_f6(v1), Vector9D_f7(v1), Vector9D_f8(v1), Vector9D_f9(v1))
  v1 := Vector9D_ctor(Vector9D_f1(v1), Vector9D_f2(v1), Vector9D_f3(v1), Vector9D_f4(v1), Vector9D_f5(v1), Vector9D_f6(v1), Vector9D_f7(v1), Vector9D_f8(v1), Vector9D_f9(v1))

  assert Vector9D_f1(v1) == 1
  assert Vector9D_f2(v1) == 2
  assert Vector9D_f3(v1) == 3
  assert Vector9D_f4(v1) == 4
  assert Vector9D_f5(v1) == 5
  assert Vector9D_f6(v1) == 6
  assert Vector9D_f7(v1) == 7
  assert Vector9D_f8(v1) == 8
  assert Vector9D_f9(v1) == 9
}