field m: Int

function foo(n: Ref): Bool
  requires acc(n.m)

method test() {
  var vroot: Ref
  var root: Ref

  var graph: Set[Ref] := Set(vroot, root)
  inhale vroot != root
  inhale forall n: Ref :: n in graph ==> acc(n.m)

  inhale forall q: Ref :: q in graph ==> foo(q)
  assert foo(vroot) == foo(root)

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}
