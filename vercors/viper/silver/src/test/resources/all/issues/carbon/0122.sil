field f: Int

predicate P(x: Ref) { acc(x.f) && x.f == 0 }

function fun(x: Ref): Int
  requires acc(P(x))

method test(x: Ref) {
  var v1: Int
  var v2: Int

  inhale acc(P(x)) && unfolding acc(P(x)) in true
  v1 := fun(x)

  exhale acc(P(x))

  inhale acc(P(x)) && unfolding acc(P(x)) in true
  v2 := fun(x)
    
  assert v1 == v2 // Fails in Carbon, verifies in Silicon
}