// oldC2SCases/predicates_2.chalice
domain GlobalKPermission {

  unique function globalK$(): Perm

  axiom globalKReadOnly {
    (globalK$() > none) && (write > globalK$())
  }
}

field old$methodPermission: Perm

field Cellx$: Int

predicate Cellwrite1$(this$_1: Ref) {
  acc(this$_1.Cellx$, write)
}

predicate Cellread1$(this$_2: Ref) {
  acc(this$_2.Cellx$, globalK$())
}

predicate Cellread2$(this$_3: Ref) {
  acc(this$_3.Cellx$, wildcard)
}

method Cellb3$(this: Ref, k$: Perm)
  requires this != null
  requires acc(Cellread1$(this), write)
{
  unfold acc(Cellread1$(this), write)
  fold acc(Cellread2$(this), write)
  fold acc(Cellread2$(this), write)
  //:: ExpectedOutput(fold.failed:insufficient.permission)
  fold acc(Cellwrite1$(this), write)
}
