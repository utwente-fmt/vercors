field f: Int

method test01(b: Bool)
  requires b ==> [true, true]
  ensures b ? [true, b] : [!b, true]
{}

method test02(b1: Bool, b2: Bool, x: Ref)
  requires b1 ==> [b2 ==> [acc(x.f), acc(x.f, 1/2) && acc(x.f, 1/2)],
                   [!b2 ? true : [acc(x.f, 1/2) && acc(x.f, 1/2), acc(x.f)],
                    b2 ? acc(x.f) : true]]

  ensures acc(x.f)
{
  if (!b1 || !b2) {
    inhale acc(x.f)
  }
}

method test03(x: Ref, b: Bool, b1: Bool, b2: Bool) {
  if (b) {
    inhale acc(x.f)
    test02(b1, b2, x)
  } else {
    inhale acc(x.f, 1/2) && acc(x.f, 1/2)
    test02(b1, b2, x)
  }

  assert acc(x.f, 1/2) && acc(x.f, 1/2)
}
