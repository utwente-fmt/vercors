field f: Int

predicate P(x: Ref) { acc(x.f) }

method test1(x: Ref) {
  inhale P(x)
  //:: ExpectedOutput(unfold.failed:negative.permission)
  unfold acc(P(x), -(1/2))
}

method test2(x: Ref) {
  var p: Perm
  assume p == -(1/2)

  inhale P(x)
  //:: ExpectedOutput(unfold.failed:negative.permission)
  unfold acc(P(x), p)
}

method test3() {
  assert -(1/2) < none
}
