// oldC2SCases/join_function_returning_token.chalice
field joinable$: Bool

field Celltk$: Ref

function Cellget1$(this: Ref): Ref
  requires this != null
  requires acc(this.Celltk$, wildcard)
{
  this.Celltk$
}

method Celltest$(this: Ref, k$_1: Perm, a: Int)
  requires this != null
  requires k$_1 > none
  requires write > k$_1
  requires acc(this.Celltk$, write)
  ensures acc(this.Celltk$, write)
{
  var newK$: Perm
  var tk: Ref
  fresh newK$
  constraining(newK$) {
    tk := new(joinable$, Celltk$)
    tk.Celltk$ := null
    tk.joinable$ := true
    exhale true && (this != null) && (newK$ > none) && (write > newK$)
  }
  this.Celltk$ := tk
  assert Cellget1$(this).joinable$
  inhale true
  assert Cellget1$(this) == tk
  Cellget1$(this).joinable$ := false
}
