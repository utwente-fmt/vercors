field f: Int
field g: Ref
field h: Set[Ref]

domain dummy {
  function foo(i: Int, j: Int): Bool
  function bar(i: Int): Bool
  function num(x: Ref): Int
}

method test01(xs: Set[Ref], y: Ref) {
  inhale acc(y.f)
  inhale forall x: Ref, i: Int :: {foo(i, x.f)} x in xs && 0 < i ==> bar(i)

  inhale y in xs
  inhale foo(1, y.f)
  assert bar(1)
}