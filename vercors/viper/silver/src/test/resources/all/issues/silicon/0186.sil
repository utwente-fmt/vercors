//:: IgnoreFile(/carbon/issue/216/)

field next : Ref;

predicate P(x:Ref) { acc(x.next) }

method m(l:Ref)
  requires acc(l.next) && acc(l.next.next)
{
  var x:Ref := l.next

  package acc(l.next,1/2) && acc(l.next.next,1/2) /* && x == l.next */ --* acc(P(x)) && acc(l.next) {
     fold acc(P(x))
  }

  //:: UnexpectedOutput(assert.failed:insufficient.permission, /silicon/issue/0186/)
  assert acc(l.next,1/2) && acc(l.next.next,1/2)
}
