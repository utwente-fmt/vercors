field val: Int

method client1(x: Ref, q: Perm)
  requires acc(x.val, q)

method test1(x: Ref) {
  var p: Perm
  assume none < p
  inhale acc(x.val, p)

  var q: Perm
  assume none < q
  constraining (q) {
    client1(x, q)
  }

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

method client2(x: Ref, q: Perm)
  requires acc(x.val, q)
  requires [true, 1/2 < perm(x.val)]

method test2(x: Ref) {
  var p: Perm
  assume none < p
  inhale acc(x.val, p)

  var q: Perm
  assume none < q
  constraining (q) {
    //:: ExpectedOutput(call.precondition:assertion.false)
    client2(x, q)
  }
}
