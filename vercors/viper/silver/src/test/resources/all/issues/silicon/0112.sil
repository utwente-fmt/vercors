field v: Int

predicate Cell(x: Ref) {
  x != null ==> acc(x.v)
}

function val(x: Ref): Seq[Int]
  requires acc(Cell(x))
{ x == null ? Seq[Int]() : unfolding acc(Cell(x)) in Seq(x.v) }

method test01(x: Ref)
  requires acc(Cell(x))
{
  assume x == null
  assert Seq[Int]() == val(x)

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}
