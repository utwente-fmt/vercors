field next:Ref

function dummy(b: Bool): Bool

method inhExhTestA(g: Set[Ref])
  requires forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, write)
  ensures forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, write)
{
  exhale forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, 1 / 1)
  inhale forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, 1 / 1)
}

method inhExhTestB(g: Set[Ref])
  requires forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, write)
  ensures forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, write)
{
  exhale forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, 1 / 2)
  inhale forall n_0: Ref :: { n_0.next } (n_0 in g) ==> acc(n_0.next, 1 / 2)
}
