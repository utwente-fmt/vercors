field val: Int

domain Array {
    function loc(a: Array, i: Int): Ref
    function len(a: Array): Int
}

predicate array(a: Array) {
    forall i: Int :: {loc(a, i).val} (0 <= i && i < len(a)) ==> acc(loc(a, i).val)
}

method _treeToArray(a: Array)
    requires array(a)
{
    unfold array(a)
    fold array(a)
}