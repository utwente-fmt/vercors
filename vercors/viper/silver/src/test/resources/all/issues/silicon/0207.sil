function set(): Set[Ref]
  ensures |result| == 0

field next: Ref
field val: Int
field nodes: Set[Ref]

predicate List(this: Ref) {
     acc(this.nodes)
  && (forall r: Ref :: r in this.nodes ==> acc(r.val))
  && (forall r: Ref :: r in this.nodes ==> acc(r.next))
  && (forall r: Ref :: {r.next} r in this.nodes && r.next != null ==> r.next in this.nodes) // matching loop?
}

function length(this: Ref): Int
  requires acc(List(this))
{
  unfolding List(this) in |this.nodes|
}
