//:: IgnoreFile(/carbon/issue/216/)

field next: Ref;

method inc(list: Ref, _footprint: Seq[Ref])
    requires (
        0 < |_footprint| &&
        list == _footprint[0] &&
        (forall i: Int ::
            (0 <= i && i < |_footprint|) ==>
            acc(_footprint[i].next)
        )
    )
    requires list.next != null
    ensures (
        0 < |_footprint| &&
        list == _footprint[0] &&
        (forall i: Int ::
            (0 <= i && i < |_footprint|) ==>
            acc(_footprint[i].next)
        )
    )
{
    var footprint: Seq[Ref] := _footprint;
    var footprint$p1: Seq[Ref] := footprint;
    package (
        (
            (forall i: Int ::
                (0 <= i && i < |footprint|) ==>
                acc(footprint[i].next)
            )
        )
        --*
        (
            (forall i: Int ::
                (0 <= i && i < |footprint$p1|) ==>
                acc(footprint$p1[i].next)
            )
        )
    )

    footprint := footprint[1..];
    exhale acc(list.next);       // We are exhaling permissions.

    // assert acc(_footprint[0].next);     // Fails. (As expected.)

    //:: ExpectedOutput(apply.failed:wand.not.found)
    apply (
        (
            (forall i: Int ::
                (0 <= i && i < |footprint|) ==>
                acc(footprint[i].next)
            )
        )
        --*
        (
            (forall i: Int ::
                (0 <= i && i < |footprint$p1|) ==>
                acc(footprint$p1[i].next)
            )
        )
    )
}
