field f : Ref
function fun(r:Ref,b:Bool) : Bool
requires r!=null && acc(r.f)
{
    b || r.f!=null
}

domain D{
    function df(b:Bool) : Int
}


method m(this:Ref,b1:Bool)
    requires acc(this.f)
    ensures acc(this.f)
{
    assert acc(this.f)
    assert acc(old(this).f)
    assert acc(old(this.f).f)
//:: ExpectedOutput(consistency.error)
    assert old(acc(this.f))

    var b : Bool
    b := fun(this,b)
 //:: ExpectedOutput(consistency.error)
   b := fun(this,acc(this.f))
//:: ExpectedOutput(consistency.error)
    assert df(acc(this.f))>0
//:: ExpectedOutput(consistency.error)
    m(this,acc(this.f))
}
