domain D1[T] {
  function f1b(x:D1[T]) : Int
}

domain D2[T] {
  function f1(x:D1[T]) : D2[T]
  function f2(x:D2[T]) : T
  function f2b(x:D2[T]) : Int

  axiom ax2a {
    forall x : D1[T] :: f1b(x) >=0 ==> f2b(f1(x))>0
  }
  axiom ax2b {
    forall x : D1[T] :: f2b(f1(x))>0 ==> f1b(x)==0
  }
}

method m1() {
  var x : Int;
  var d1x : D1[Int]
  assert f1b(d1x) >= 0 ==> f1b(d1x) == 0
}