//:: IgnoreFile(/carbon/issue/216/)
/* Simplified problem */

define RHS2 old(unfolding acc(valid2(x)) in x.r)

method test42(x: Ref)
  requires acc(valid2(x))
  requires unfolding acc(valid2(x)) in x.r
  ensures true --* RHS2
{
  package true --* RHS2
}

field r: Bool

predicate valid2(self: Ref) {
  acc(self.r) && true // Conjunction --> pair of snapshots
}


/* Originally reported problem */

define RHS (acc(valid__Foo(x$1), write) &&
    (unfolding acc(valid__Foo(x$1), rd$1 / 2) in  x$1.Foo__v2.Int__v) ==
     old(unfolding acc(valid__Foo(x$1), rd$1 / 2) in  x$1.Foo__v2.Int__v))


method test4(x$1: Ref, rd$1: Perm) returns (res$1: Ref)
  requires none < rd$1 && rd$1 < write
  requires acc(valid__Foo(x$1), write)
  ensures acc(res$1.Int__v, write)
  ensures acc(res$1.Int__v, write) --* RHS
{
    unfold acc(valid__Foo(x$1), write)
    res$1 := x$1.Foo__v1

  package (acc(res$1.Int__v, write)) --* RHS {
      fold acc(valid__Foo(x$1), write)
  }
}

field Foo__v1: Ref
field Foo__v2: Ref

predicate valid__Foo(self: Ref) {
  acc(self.Foo__v1)&&
  acc(self.Foo__v1.Int__v)&&
  acc(self.Foo__v2)&&
  acc(self.Foo__v2.Int__v)
}
field Int__v: Int

