function Nodesize(this: Ref): Int
  requires this != null
  requires acc(Nodevalid(this), wildcard)
  ensures result > 0
{
  1
}

predicate Nodevalid(this: Ref) {
  true
}

method Nodeinit(this: Ref, v: Int) returns (k: Perm)
  requires this != null
  ensures [(acc(Nodevalid(this), write) && (Nodesize(this) == 1)), true]
  //ensures (acc(Nodevalid(this), write) && (Nodesize(this) == 1))
{
  fold acc(Nodevalid(this), write)
}
