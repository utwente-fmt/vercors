predicate P1(r$: Ref)

predicate P3(r$: Ref)

method test1()
{
    var b: Ref
    var k: Perm

    inhale acc(P1(b))
    inhale acc(P3(b))

    constraining(k) {
        exhale perm(P3(b)) >= write ? acc(P3(b)) : (perm(P1(b)) > none ? acc(P1(b), write - perm(P3(b))) : true)
    }

    //:: UnexpectedOutput(assert.failed:assertion.false, /carbon/issue/179/)
    assert perm(P1(b)) == write
}

method test2()
{
    var b: Ref
    var k: Perm

    inhale acc(P1(b))
    inhale acc(P3(b))

    //constraining(k) {
        exhale perm(P3(b)) >= write ? acc(P3(b)) : (perm(P1(b)) > none ? acc(P1(b), write - perm(P3(b))) : true)
    //}

    assert perm(P1(b)) == write
}
