predicate F1(r: Ref) {true}

function F2(r: Ref) : Bool {true}

method F3(r: Ref) returns (res: Bool)

function idf(r: Ref): Ref {r}

method idm(r: Ref) returns (res: Ref)
{
        res := r
}

predicate idp(r: Ref) {true}

method main(r: Ref)
{
    //:: ExpectedOutput(typechecker.error)
    inhale F3(r) 
}

method main2(r: Ref)
{
    //:: ExpectedOutput(typechecker.error)
    inhale acc(F2(r)) 
}
method main3(r: Ref)
{
    //:: ExpectedOutput(typechecker.error)
    inhale acc(F3(r)) 
}
method main4(r: Ref)
    requires acc(F1(r))
{
    //:: ExpectedOutput(typechecker.error)
    unfold  F2(r) 
}
