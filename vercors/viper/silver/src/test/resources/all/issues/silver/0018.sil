method tests_good() {
  var x: Seq[Int] := Seq()
  assert x == Seq()

  var y: Set[Ref] := Set()
  assert y == Set()

  var z: Multiset[Bool] := Multiset()
  assert z == Multiset()
}

method tests_bad() {
  //:: ExpectedOutput(typechecker.error)
  var x: Seq[Int] := Seq[Ref]()

  //:: ExpectedOutput(typechecker.error)
  var z: Multiset[Bool] := Set[Bool]()

//  var y: Set[Ref] := Set[T]()
}



domain MultiSet[T] {
  function MultiSet_FromSeq(seq: Seq[T]): MultiSet[T]

  function MultiSet_Empty(): MultiSet[T]

  axiom ms_from_seq_empty {
    MultiSet_FromSeq(Seq[T]()) == MultiSet_Empty()
  }
}
