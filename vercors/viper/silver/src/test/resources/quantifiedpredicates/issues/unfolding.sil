field f: Int

predicate p2(r:Ref)
{
    acc(r.f) && r.f == 5
}

method m2(x: Ref, xs:Set[Ref])
requires x in xs
requires forall r:Ref :: r in xs ==> acc(p2(r))
{
    //:: UnexpectedOutput(assert.failed:assertion.false, /Carbon/issue/158/)
    assert forall r:Ref :: r in xs ==> unfolding p2(r) in r.f == 5
}

/*
    this behavior is sort of expected in Silicon, since unfolding considers only permissions within the same block
*/
method m3(x1: Ref, x2:Ref)
requires acc(p2(x1))
requires acc(p2(x2))
{
    //:: UnexpectedOutput(assert.failed:assertion.false, /Carbon/issue/158/)
    //:: UnexpectedOutput(assert.failed:insufficient.permission, /Silicon/issue/158/)
    assert forall r:Ref :: r in Set(x1, x2) ==> unfolding p2(r) in r.f == 5
}

method m4(x1: Ref, x2:Ref)
requires acc(p2(x1))
requires acc(p2(x2))
{
    var r:Ref
    assume r in Set(x1, x2)
    if (r == x1) {
        assert unfolding p2(r) in r.f == 5
    } else {
        assert unfolding p2(r) in r.f == 5
    }
    //assume forall r:Ref :: r in Set(x1, x2) ==> unfolding p2(r) in r.f == 5
}