function NonDet1(vari1: Bool):Bool {
    true
}

function NonDet2(vari1:Bool, vari2:Bool): Bool {
    true
}

function func(b: Bool): Bool
  ensures exists k: Bool ::
      [NonDet1(k) ? true : (b &&
          [NonDet1(k) ? k : (exists m: Bool ::
              [NonDet2(k, m) ? true : m, true || m])
          , k || exists m: Bool :: true || m]),
      true || (b && (k || exists m: Bool :: true || m))] {
      true
  }

method foo() returns ()
    ensures exists k: Bool :: [NonDet1(k) ? k : true, k || true]
{

}
