class dataRedistOrig
{
  pure int expr(int length, int i) = length-1-i;

  gpuopt tile intra 5;
  context_everywhere a != null && b != null && c != null;
  context_everywhere a.length == b.length && b.length == c.length;
  context_everywhere a.length == 1234;
  context (\forall* int i; i >= 0 && i < a.length; Perm(a[i], 1));
  context (\forall* int i; i >= 0 && i < a.length; Perm(b[expr(a.length,i)], 1\2));
  context (\forall* int i; i >= 0 && i < a.length; Perm(c[expr(a.length,i)], 1\2));
  ensures (\forall int i; i >= 0 && i < a.length; a[i] == b[expr(a.length,i)] + c[expr(a.length,i)]);
  void data_redistribution_orig(int[] a, int[] b, int[] c)
  {
    par threads (int tid = 0 .. a.length)
    requires Perm(a[tid], 1) ** Perm(b[expr(a.length,tid)], 1\2);
    ensures Perm(a[tid], 1) ** Perm(b[expr(a.length,tid)], 1\2);
    requires Perm(c[expr(a.length,tid)], 1\2);
    ensures Perm(c[expr(a.length,tid)], 1\2);
    ensures a[tid] == b[expr(a.length,tid)] + c[expr(a.length,tid)];
    {
        a[tid] = b[expr(a.length,tid)] + c[expr(a.length,tid)];
    }
  }

}
