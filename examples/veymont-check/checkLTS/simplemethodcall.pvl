//:: cases SimpleMethodCall
//:: suite veymont veymont-check
//:: option --veymont tmp.pvl
//:: verdict Pass
//:: tool veymont

class Role {
	
	int x, left;
	
	ensures Perm(x, write) ** Perm(left, write);
	ensures x == v;
	Role (int v) {
		x = v;
	}
	
	void compute() {
        compute();
	}
}


class Main {
	
	Role a, b, c;
	
	ensures Perm(a,read) ** Perm(b,read) ** Perm(c,read);
	ensures Perm(a.x, write) ** Perm(a.left, write);
	ensures Perm(b.x, write) ** Perm(b.left, write);
	ensures Perm(c.x, write) ** Perm(c.left, write);
	ensures a.x == 0 && b.x == 8 && c.x == 4;
	Main() {
		a = new Role(0);
		b = new Role(8);
		c = new Role(4);
	}

	context Perm(a,read) ** Perm(b,read) ** Perm(c,read);
	context Perm(a.x, write) ** Perm(a.left, write);
	context Perm(b.x, write) ** Perm(b.left, write);
	context Perm(c.x, write) ** Perm(c.left, write);
	requires a.x == 0 && b.x == 8 && c.x == 4;
	ensures a.x == b.x && b.x == c.x; 
	void run() {
		
		b.x = 3;
		foo();
		a.compute();
	}
	
	void foo() {
	    a.x = 6;
	    c.x = 1;
	}

	void main() {
		Main m = new Main();
		m.run();
	}
	
}

